<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Password</title>
    <style>
        /* Add your CSS styling here */
        .error {
            color: red;
        }
        /* CSS for the Change Password Form */
body {
   
    font-family: Arial, sans-serif;
    background-color: #f5f5f5;
    margin: 0;
    padding: 0;
}

.container {
   
    max-width: 600px;
    margin: 0 auto;
    padding: 20px;
    background-color: #ffffff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

h1 {
    text-align: center;
    color: #333;
}

.form-group {
    margin-bottom: 15px;
}

label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
    color: #333;
}

input[type="password"] {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
}

.error {
    color: red;
    font-size: 14px;
    margin-top: 5px;
}

button[type="submit"] {
    display: block;
    width: 100%;
    padding: 10px;
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
}

button[type="submit"]:hover {
    background-color: #0056b3;
}

    </style>
</head>
<body>
    <div class="container">
        <h1>Change Password</h1>
        <form id="change-password-form" action="/user/change-password/<%= user.id %>" method="post" onsubmit="return validateForm()">
            <!-- <div class="form-group">
                <label for="current-password">Current Password:</label>
                <input type="password" name="current-password" id="current-password">
                <p id="current-password-error" class="error"></p>
            </div> -->
            <div class="form-group">
                <label for="new_password">New Password:</label>
                <input type="password" name="new_password" id="new-password">
                <p id="new-password-error" class="error"></p>
            </div>
            <div class="form-group">
                <label for="confirm-password">Confirm Password:</label>
                <input type="password" name="confirm-password" id="confirm-password">
                <p id="confirm-password-error" class="error"></p>
            </div>
            <div class="form-group">
                <p id="message" style="color: green;"><% if (locals.message) { %>
                    <%= locals.message %> go to <a style="text-decoration: none; color: green;" href="/user/dashboard">Home</a>
                <% } %></p>
             </div>
            <button type="submit">Change Password</button>
        </form>
    </div>
    <script>
        // Define the validation functions
        const message=document.getElementById('message');

        function validateCurrentPassword() {
            // Implement validation logic for the current password field
            const currentPassword = document.getElementById('current-password').value;
            const currentPasswordError = document.getElementById('current-password-error');
            currentPasswordError.textContent = '';

            // Add your validation logic here, e.g., check if it meets your criteria
            if (currentPassword.trim() === '') {
                currentPasswordError.textContent = 'Current Password is required';
            }
        }
        // const message=document.getElementById('message');
        // window.onload()
        function validateNewPassword() {
            // Implement validation logic for the new password field
            const newPassword = document.getElementById('new-password').value;
            const newPasswordError = document.getElementById('new-password-error');
            newPasswordError.textContent = '';

            // Add your validation logic here
            if (newPassword.length < 8) {
                newPasswordError.textContent = 'New Password must be at least 8 characters long';
            } else if (!/[!@#$%^&*(),.?":{}|<>]/.test(newPassword)) {
                newPasswordError.textContent = 'New Password must contain at least one special character';
            } else if (!/[0-9]/.test(newPassword)) {
                newPasswordError.textContent = 'New Password must contain at least one number';
            } else if (!/[A-Z]/.test(newPassword)) {
                newPasswordError.textContent = 'New Password must contain at least one uppercase letter';
            }
        }

        function validateConfirmPassword() {
            // Implement validation logic for the confirm password field
            const newPassword = document.getElementById('new-password').value;
            const confirmPassword = document.getElementById('confirm-password').value;
            const confirmPasswordError = document.getElementById('confirm-password-error');
            confirmPasswordError.textContent = '';

            // Add your validation logic here, e.g., check if it matches the new password
            if (newPassword !== confirmPassword) {
                confirmPasswordError.textContent = 'Passwords do not match';
            }
        }

        // Add event listeners to trigger validation while typing
        // document.getElementById('current-password').addEventListener('input', validateCurrentPassword);
        document.getElementById('new-password').addEventListener('input', validateNewPassword);
        document.getElementById('confirm-password').addEventListener('input', validateConfirmPassword);

        // Define the overall form validation function
        function validateForm() {
            message.textContent="";
            // validateCurrentPassword();
            validateNewPassword();
            validateConfirmPassword();

            // Check if any errors exist
            const errors = document.querySelectorAll('.error');
            for (const error of errors) {
                if (error.textContent !== '') {
                    return false; // Prevent form submission if there are errors
                }
            }

            return true; // Allow form submission if there are no errors
        }
    </script>
</body>
</html>
